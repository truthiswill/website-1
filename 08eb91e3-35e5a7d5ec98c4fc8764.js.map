{"version":3,"sources":["webpack:///./src/components/Landing.js"],"names":["USED_BY_LIST","logo","require","label","url","UsedByContainer","UsedByLogo","props","href","target","className","title","alt","rel","src","width","height","Button","Heading","PopcornBox","forwardRef","ref","css","media","sm","TooltipName","TooltipPrice","DotHitArea","Dot","selected","Section","lg","ExampleArea","DotContainer","ScrollContainer","ExampleBox","ExampleText","Ul","Li","components","a","to","PlacementExample","useState","placement","setPlacement","usePopper","modifiers","name","enabled","options","rootBoundary","reference","popper","code","reduce","placements","basePlacement","indexOf","map","p","key","onClick","onMouseDown","data-placement","aria-label","popcornBox","data-small","data-popper-arrow","PreventOverflowExample","scrollContainerRef","useRef","useLayoutEffect","current","scrollTop","window","innerWidth","sizes","FlipExample","Layout","children","data","useStaticQuery","siteTitle","site","siteMetadata","maxWidth","size","stroke","Date","getFullYear"],"mappings":"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","file":"08eb91e3-35e5a7d5ec98c4fc8764.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { useState, useLayoutEffect, useRef, forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport { MDXProvider } from '@mdx-js/react';\nimport styled from '@emotion/styled';\nimport {\n  Crop,\n  Layers,\n  Heart,\n  Check,\n  ChevronRight,\n  // CloudLightning,\n  Move,\n  ArrowUp,\n  ArrowDown,\n} from 'react-feather';\nimport Highlight from './Highlight';\nimport CarbonAds from './CarbonAds';\nimport SEO from './Seo';\n\nimport Header from './Header';\nimport InstallBar from './InstallBar';\nimport {\n  Container,\n  LinkStyled,\n  ExternalLinkStyled,\n  media,\n  Footer,\n  sizes,\n} from './Framework';\nimport { usePopper, Tooltip, Arrow } from './Popper';\n// import { CreativeTim } from './Affiliates';\nimport 'modern-normalize';\nimport '@openfonts/luckiest-guy_latin';\nimport './layout.css';\nimport './prism-base2tone-pool-dark.css';\n\nimport popcornBox from '../images/popcorn-box.svg';\nimport { css } from '@emotion/react';\n\nconst USED_BY_LIST = [\n  {\n    logo: require('../images/logos/microsoft.svg'),\n    label: 'Used by Microsoft - Fluent UI',\n    url: 'https://microsoft.com/',\n  },\n  {\n    logo: require('../images/logos/atlassian.svg'),\n    label: 'Used by Atlassian - Atlaskit',\n    url: 'https://www.atlassian.com/',\n  },\n  {\n    logo: require('../images/logos/bootstrap.svg'),\n    label: 'Used by Bootstrap',\n    url: 'https://getbootstrap.com/',\n  },\n  {\n    logo: require('../images/logos/gitlab.svg'),\n    label: 'Used by GitLab',\n    url: 'https://www.gitlab.com/',\n  },\n  {\n    logo: require('../images/logos/medium.svg'),\n    label: 'Used by Medium - text selection tooltip',\n    url: 'https://www.medium.com/',\n  },\n  {\n    logo: require('../images/logos/adobe.svg'),\n    label: 'Used by Adobe - @webspectrum components',\n    url: 'https://www.adobe.com/',\n  },\n  {\n    logo: require('../images/logos/stackexchange.svg'),\n    label: 'Used by Stack Exchange',\n    url: 'https://www.stackexchange.com/',\n  },\n  {\n    logo: require('../images/logos/drupal.svg'),\n    label: 'Used by Drupal',\n    url: 'https://www.drupal.org/',\n  },\n  {\n    logo: require('../images/logos/uber.svg'),\n    label: 'Used by Uber - Base Web',\n    url: 'https://www.uber.com/',\n  },\n  {\n    logo: require('../images/logos/twitch.svg'),\n    label: 'Used by Twitch',\n    url: 'https://www.twitch.tv/',\n  },\n  {\n    logo: require('../images/logos/discourse.svg'),\n    label: 'Used by Discourse',\n    url: 'https://www.discourse.org/',\n  },\n  {\n    logo: require('../images/logos/reddit.svg'),\n    label: 'Used by Reddit',\n    url: 'https://www.reddit.com/',\n  },\n];\n\nconst UsedByContainer = styled.div`\n  margin-top: 40px;\n`;\n\nconst UsedByLogo = styled((props) => (\n  <a\n    href={props.href}\n    target=\"_blank\"\n    className={props.className}\n    title={props.alt}\n    rel=\"noopener noreferrer\"\n  >\n    <img src={props.src} alt={props.alt} width=\"40\" height=\"40\" />\n  </a>\n))`\n  opacity: 0.2;\n  transition: opacity 0.2s ease-in-out;\n  &:hover {\n    opacity: 1;\n  }\n  img {\n    height: 40px;\n    margin: 10px;\n  }\n`;\n\nconst Button = styled.a`\n  display: inline-block;\n  background: white;\n  padding: 10px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  font-size: 16px;\n  font-weight: 700;\n  margin-top: 10px;\n  color: #c83b50;\n  transition: all 0.2s ease-in-out;\n  text-transform: uppercase;\n\n  &:hover {\n    background: #c73a50;\n    color: white;\n    border-color: #c73a50;\n  }\n`;\n\nconst Heading = styled.h3`\n  font-family: 'Luckiest Guy', sans-serif;\n  letter-spacing: 0.5px;\n  text-transform: uppercase;\n  font-size: 30px;\n  -webkit-font-smoothing: antialiased;\n  margin-top: 15px;\n  margin-bottom: 15px;\n  line-height: 1.1;\n  color: #f4e0f1;\n`;\n\nconst PopcornBox = forwardRef((props, ref) => (\n  <img\n    ref={ref}\n    alt=\"Popcorn box\"\n    {...props}\n    width=\"134\"\n    height=\"120\"\n    css={css`\n      position: relative;\n      left: 50%;\n      width: 134px;\n      height: 120px;\n      margin-left: -67px;\n      transform: scale(0.8);\n\n      ${media.sm} {\n        transform: scale(1);\n      }\n    `}\n  />\n));\n\nconst TooltipName = styled.div`\n  font-weight: 900;\n  text-transform: uppercase;\n`;\n\nconst TooltipPrice = styled.div`\n  font-weight: normal;\n`;\n\nconst DotHitArea = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  width: 50px;\n  height: 50px;\n  padding: 0;\n  border: none;\n  background: none;\n  transition: transform 0.4s cubic-bezier(0.54, 1.5, 0.38, 1.2);\n  cursor: pointer;\n  outline: 0;\n  will-change: transform;\n  -webkit-tap-highlight-color: transparent;\n\n  &:focus > div {\n    box-shadow: 0 0 0 6px rgba(255, 100, 150, 0.4);\n  }\n\n  &:hover {\n    transform: scale(1.5);\n  }\n\n  &[data-placement^='top'] {\n    top: 0;\n    left: 50%;\n    margin-left: -25px;\n  }\n\n  &[data-placement^='bottom'] {\n    bottom: 0;\n    left: 50%;\n    margin-left: -25px;\n  }\n\n  &[data-placement='top-start'],\n  &[data-placement='bottom-start'] {\n    left: calc(50% - 50px);\n  }\n\n  &[data-placement='top-end'],\n  &[data-placement='bottom-end'] {\n    left: calc(50% + 50px);\n  }\n\n  &[data-placement^='right'] {\n    right: 0;\n    top: 50%;\n    margin-top: -25px;\n  }\n\n  &[data-placement^='left'] {\n    left: 0;\n    top: 50%;\n    margin-top: -25px;\n  }\n\n  &[data-placement='left-start'],\n  &[data-placement='right-start'] {\n    top: calc(50% - 50px);\n  }\n\n  &[data-placement='left-end'],\n  &[data-placement='right-end'] {\n    top: calc(50% + 50px);\n  }\n`;\n\nconst Dot = styled.div`\n  width: 18px;\n  height: 18px;\n  border: 2px solid #ff6b81;\n  background: ${(props) => (props.selected ? '#ff6b81' : 'transparent')};\n  border-radius: 50%;\n`;\n\nconst Section = styled.section`\n  background-color: #281e36;\n  padding: 40px 0;\n  font-size: 16px;\n  text-align: center;\n\n  ${media.lg} {\n    font-size: 18px;\n    padding: 50px 0;\n  }\n\n  &:not(:last-of-type) {\n    border-bottom: 1px solid #362c4f;\n  }\n`;\n\nexport const ExampleArea = styled.div`\n  position: relative;\n  width: 100%;\n  scrollbar-color: rgba(255, 230, 157, 1) transparent;\n  border-radius: 10px;\n\n  ::-webkit-scrollbar {\n    -webkit-appearance: none;\n    width: 7px;\n  }\n  ::-webkit-scrollbar-thumb {\n    border-radius: 4px;\n    background-color: rgba(255, 230, 157, 1);\n    -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, 0.5);\n  }\n`;\n\nconst DotContainer = styled(ExampleArea)`\n  height: 350px;\n  text-align: center;\n  margin: 0 auto;\n\n  ${media.lg} {\n    height: 450px;\n  }\n`;\n\nexport const ScrollContainer = styled(ExampleArea)`\n  overflow-y: scroll;\n  overscroll-behavior: contain;\n  height: 350px;\n  margin: 0 auto;\n  border: 2px dashed #ff6b81;\n  background-color: #281e36;\n\n  ${media.lg} {\n    height: 450px;\n  }\n\n  &::before {\n    content: '';\n    display: block;\n    width: 1px;\n    height: 600px;\n  }\n\n  &::after {\n    content: '';\n    display: block;\n    width: 1px;\n    height: 600px;\n  }\n`;\n\nconst ExampleBox = styled.article`\n  padding: 40px 0;\n  display: flex;\n  flex-direction: column-reverse;\n\n  &:not(:last-of-type) {\n    border-bottom: 1px solid #44395d;\n  }\n\n  ${media.lg} {\n    display: grid;\n    grid-template-columns: 2fr 3fr;\n    align-items: start;\n    font-size: 17px;\n    padding: 50px 0;\n  }\n\n  strong {\n    color: #ff6b81;\n  }\n\n  p {\n    margin-top: 0;\n  }\n`;\n\nconst ExampleText = styled.div`\n  padding: 20px 0 0;\n  display: grid;\n  align-items: center;\n  margin-bottom: 20px;\n\n  ${media.lg} {\n    padding: 0 40px;\n    margin-bottom: 0;\n  }\n`;\n\nconst Ul = styled.ul`\n  padding-left: 20px;\n  list-style: none;\n  margin-top: 0;\n  text-align: left;\n`;\n\nconst Li = styled.li`\n  svg {\n    display: inline-block;\n    top: 6px;\n    left: 2px;\n    margin-right: 6px;\n    position: relative;\n    color: #ff6b81;\n    height: 25px;\n    margin-left: -30px;\n  }\n\n  strong {\n    color: #ff6b81;\n  }\n\n  &:not(:last-of-type) {\n    margin-bottom: 10px;\n  }\n`;\n\nconst components = {\n  a: ({ href, ...props }) => <Link to={href} {...props} />,\n};\n\nconst PlacementExample = () => {\n  const [placement, setPlacement] = useState('top');\n  const { reference, popper } = usePopper({\n    placement,\n    modifiers: [\n      {\n        name: 'flip',\n        enabled: false,\n      },\n      // left/right placements on mobile\n      {\n        name: 'preventOverflow',\n        options: {\n          rootBoundary: 'document',\n        },\n      },\n    ],\n  });\n\n  const code = `\nimport { createPopper } from '@popperjs/core';\n\nconst popcorn = document.querySelector('#popcorn');\nconst tooltip = document.querySelector('#tooltip');\n\ncreatePopper(popcorn, tooltip, {\n  placement: '${placement}',\n});`;\n\n  return (\n    <ExampleBox>\n      <DotContainer>\n        {['top', 'right', 'bottom', 'left']\n          .reduce(\n            (placements, basePlacement) => [\n              ...placements,\n              // clockwise tabbing order\n              ...(['bottom', 'left'].indexOf(basePlacement) >= 0\n                ? [\n                    `${basePlacement}-end`,\n                    basePlacement,\n                    `${basePlacement}-start`,\n                  ]\n                : [\n                    `${basePlacement}-start`,\n                    basePlacement,\n                    `${basePlacement}-end`,\n                  ]),\n            ],\n            []\n          )\n          .map((p) => (\n            <DotHitArea\n              key={p}\n              onClick={() => setPlacement(p)}\n              onMouseDown={() => setPlacement(p)}\n              data-placement={p}\n              aria-label={p}\n              selected={placement === p}\n            >\n              <Dot selected={placement === p} />\n            </DotHitArea>\n          ))}\n        <PopcornBox\n          ref={reference}\n          src={popcornBox}\n          css={css`\n            position: absolute;\n            top: 50%;\n            margin-top: -60px;\n          `}\n        />\n        <Tooltip ref={popper}>\n          <TooltipName data-small>Tip</TooltipName>\n          <TooltipName>Popcorn</TooltipName>\n          <Arrow data-popper-arrow />\n        </Tooltip>\n      </DotContainer>\n      <ExampleText>\n        <Heading>\n          <Move /> Placement\n        </Heading>\n        <p>\n          <strong>Click on the dots</strong> to place the tooltip. There are 12\n          different placements to choose from.\n        </p>\n        <Highlight code={code} />\n        <span>\n          <ExternalLinkStyled to=\"https://codesandbox.io/s/github/popperjs/website/tree/master/examples/placement\">\n            Edit on CodeSandbox\n          </ExternalLinkStyled>\n        </span>\n      </ExampleText>\n    </ExampleBox>\n  );\n};\n\nconst PreventOverflowExample = () => {\n  const scrollContainerRef = useRef();\n\n  const { reference, popper } = usePopper({\n    placement: 'right',\n  });\n\n  useLayoutEffect(() => {\n    scrollContainerRef.current.scrollTop =\n      window.innerWidth <= sizes.lg ? 490 : 450;\n  }, []);\n\n  const code = `\nimport { createPopper } from '@popperjs/core';\n\nconst popcorn = document.querySelector('#popcorn');\nconst tooltip = document.querySelector('#tooltip');\n\ncreatePopper(popcorn, tooltip, {\n  placement: 'right',\n});\n`;\n\n  return (\n    <ExampleBox>\n      <ScrollContainer ref={scrollContainerRef}>\n        <PopcornBox\n          ref={reference}\n          src={popcornBox}\n          css={css`\n            position: absolute;\n            left: 100px;\n          `}\n        />\n        <Tooltip ref={popper}>\n          <TooltipName>Popcorn</TooltipName>\n          <TooltipName>sizes</TooltipName>\n          <TooltipName>&amp; Price</TooltipName>\n\n          <TooltipPrice>XXS: $1.99</TooltipPrice>\n          <TooltipPrice>XS: $2.99</TooltipPrice>\n          <TooltipPrice>S: $3.99</TooltipPrice>\n          <TooltipPrice>M: $4.99</TooltipPrice>\n          <TooltipPrice>L: $5.99</TooltipPrice>\n          <TooltipPrice>XL: $6.99</TooltipPrice>\n          <TooltipPrice>XXL: $7.99</TooltipPrice>\n\n          <Arrow data-popper-arrow />\n        </Tooltip>\n      </ScrollContainer>\n      <ExampleText>\n        <Heading>\n          <Crop /> Overflow prevention\n        </Heading>\n        <p>\n          <strong>Scroll the container</strong> (or the whole page) to see the\n          tooltip stay within the boundary. Once the opposite edges of the\n          popcorn and tooltip are aligned, the tooltip is allowed to overflow to\n          prevent detachment.\n        </p>\n        <Highlight code={code} />\n        <span>\n          <ExternalLinkStyled to=\"https://codesandbox.io/s/github/popperjs/website/tree/master/examples/overflow-prevention\">\n            Edit on CodeSandbox\n          </ExternalLinkStyled>\n        </span>\n      </ExampleText>\n    </ExampleBox>\n  );\n};\n\nconst FlipExample = () => {\n  const { reference, popper } = usePopper({ placement: 'bottom' });\n  const scrollContainerRef = useRef();\n\n  useLayoutEffect(() => {\n    scrollContainerRef.current.scrollTop =\n      window.innerWidth <= sizes.lg ? 490 : 450;\n  }, []);\n\n  const code = `\nimport { createPopper } from '@popperjs/core';\n\nconst popcorn = document.querySelector('#popcorn');\nconst tooltip = document.querySelector('#tooltip');\n\ncreatePopper(popcorn, tooltip);\n`;\n\n  return (\n    <ExampleBox>\n      <ScrollContainer ref={scrollContainerRef}>\n        <PopcornBox ref={reference} src={popcornBox} />\n        <Tooltip ref={popper}>\n          <TooltipName>Popcorn</TooltipName>\n          <TooltipPrice>New Item</TooltipPrice>\n\n          <Arrow data-popper-arrow />\n        </Tooltip>\n      </ScrollContainer>\n      <ExampleText>\n        <Heading>\n          <ArrowUp />\n          <ArrowDown /> Flipping\n        </Heading>\n        <p>\n          <strong>Scroll the container</strong> (or the whole page) to see the\n          tooltip flip to the opposite side once it's about to overflow the\n          visible area. Once enough space is detected on its preferred side, it\n          will flip back.\n        </p>\n        <Highlight code={code} />{' '}\n        <span>\n          <ExternalLinkStyled to=\"https://codesandbox.io/s/github/popperjs/website/tree/master/examples/flipping\">\n            Edit on CodeSandbox\n          </ExternalLinkStyled>\n        </span>\n      </ExampleText>\n    </ExampleBox>\n  );\n};\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query LandingTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <MDXProvider components={components}>\n      <SEO title=\"Home\" />\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <InstallBar />\n      <CarbonAds\n        css={css`\n          ${media.lg} {\n            position: absolute;\n            top: 0;\n            right: 15px;\n            .carbonplaceholder,\n            #carbonads {\n              background-color: #ffffff4f;\n              color: #632f45;\n            }\n          }\n        `}\n      />\n\n      <Container maxWidth={1400}>\n        <PlacementExample />\n        <PreventOverflowExample />\n        <FlipExample />\n      </Container>\n\n      <Section>\n        <Container>\n          <Crop size={50} stroke=\"#ffe69d\" />\n          <Heading>In a nutshell, Popper:</Heading>\n          <Ul>\n            <Li>\n              <Check />\n              <strong>\n                Places your tooltip or popover relative to the reference\n              </strong>{' '}\n              taking into account their sizes, and positions its arrow centered\n              to the reference.\n            </Li>\n            <Li>\n              <Check />\n              <strong>\n                Takes into account the many different contexts it can live in\n              </strong>{' '}\n              relative to the reference (different offsetParents, different or\n              nested scrolling containers).\n            </Li>\n            <Li>\n              <Check />\n              <strong>\n                Keeps your tooltip or popover in view as best as possible\n              </strong>\n              . It prevents it from being clipped or cut off (overflow\n              prevention) and changes the placement if the original does not fit\n              (flipping).\n            </Li>\n          </Ul>\n        </Container>\n      </Section>\n\n      {/* Disabled for now, I need to find a more remunerative system (more than $0/month) */}\n      {/* <Section>\n        <Container>\n          <CloudLightning size={50} stroke=\"#ffe69d\" />\n          <Heading>UI Tools Using Popper</Heading>\n          <p>\n            Looking for some real life examples of UI Kits, Dashboards and\n            Design Systems that are implementing Popper? Try these hand picked\n            Free & Premium products!\n          </p>\n\n          <CreativeTim />\n        </Container>\n      </Section> */}\n\n      <Section>\n        <Container>\n          <Layers size={50} stroke=\"#ffe69d\" />\n          <Heading>Granular configuration with sensible defaults</Heading>\n          <p>\n            Popper aims to \"just work\" without you needing to configure much. Of\n            course, there are cases where you need to configure Popper beyond\n            its defaults – in these cases, Popper shines by offering high\n            granularity of configuration to fine-tune the position or behavior\n            of your popper.\n          </p>\n          <p>\n            You can extend Popper with your own modifiers (or plugins) to make\n            your popper work for you, no matter how advanced the scenario.\n          </p>\n        </Container>\n      </Section>\n\n      <Section>\n        <Container>\n          <Check size={50} stroke=\"#ffe69d\" />\n          <Heading>No compromises</Heading>\n          <Ul>\n            <Li>\n              <Check />\n              <strong>No detachment</strong>. Position updates take less than a\n              millisecond on average devices. Popper doesn't debounce the\n              positioning updates of the tooltip to the point where it will{' '}\n              <em>ever</em> detach from its reference, but this doesn't come at\n              the cost of poor performance.\n            </Li>\n            <Li>\n              <Check />\n              <strong>\n                You don't have to change the DOM context of your tooltip or\n                popover element\n              </strong>\n              ; it will work no matter where your popper and reference elements\n              live, even in the most complex scenarios like nested scrolling\n              containers or alternative offsetParent contexts.\n            </Li>\n            <Li>\n              <Check />\n              <strong>Still lightweight</strong>. Handling all of this\n              complexity is still done in an efficient manner. The base Popper\n              is only 2 kB minzipped.\n            </Li>\n          </Ul>\n        </Container>\n      </Section>\n\n      <Section>\n        <Container>\n          <Heart size={50} stroke=\"#ffe69d\" />\n          <Heading>Free open-source, used by millions</Heading>\n          <p>\n            Popper has billions of hits across the web, is trusted by millions\n            of developers in production, and used in popular libraries like\n            Bootstrap and Material UI.\n          </p>\n          <Button\n            href=\"https://opencollective.com/popperjs\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Support us\n          </Button>\n          <UsedByContainer>\n            {USED_BY_LIST.map(({ logo, label, url }) => (\n              <UsedByLogo href={url} src={logo} alt={label} key={url} />\n            ))}\n          </UsedByContainer>\n        </Container>\n      </Section>\n\n      <Section>\n        <Container>\n          <ChevronRight size={50} stroke=\"#ffe69d\" />\n          <Heading>Ready to start?</Heading>\n          <p>\n            Start reading{' '}\n            <LinkStyled to=\"/docs/\">Popper's documentation</LinkStyled>!\n          </p>\n        </Container>\n      </Section>\n\n      <Footer>\n        <Container>\n          <p>© {new Date().getFullYear()} MIT License</p>\n        </Container>\n      </Footer>\n    </MDXProvider>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}